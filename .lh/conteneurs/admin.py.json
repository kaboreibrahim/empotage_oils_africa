{
    "sourceFile": "conteneurs/admin.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1734390995987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734434161697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,21 +5,17 @@\n class ConteneurInline(admin.TabularInline):  # Vous pouvez aussi utiliser admin.StackedInline pour un affichage en blocs\n     model = Conteneur\n     extra = 1  # Nombre de conteneurs supplémentaires à afficher\n \n-\n-class IsoInline(admin.TabularInline):  # Vous pouvez aussi utiliser admin.StackedInline pour un affichage en blocs\n-    model = IsoTanks\n-    extra = 1  # Nombre de conteneurs supplémentaires à afficher\n-\n+ \n # Configuration pour le modèle Dossier\n @admin.register(Dossier)\n class DossierAdmin(admin.ModelAdmin):\n     list_display = ('date_creation', 'statut', 'projet','TRD', 'client', 'agent_selection', 'agent_acconage','port_de_chargement', 'port_de_dechargement','compagnie_maritime', 'site', 'commodite', 'secretaire')\n     search_fields = ('projet', 'statut', 'Personnel_type', 'client__nom')\n     list_filter = ('statut', 'projet', 'date_creation', 'secretaire')\n     date_hierarchy = 'date_creation'\n-    inlines = [ConteneurInline,IsoInline]  # Ajout de l'inline pour les conteneurs\n+    inlines = [ConteneurInline]  # Ajout de l'inline pour les conteneurs\n \n # Autres configurations d'administration (comme avant)\n @admin.register(Personnel)\n class UserAdmin(admin.ModelAdmin):\n@@ -80,21 +76,10 @@\n             obj.agent_acconage = request.Personnel_type\n         super().save_model(request, obj, form, change)\n \n \n-@admin.register(IsoTanks)\n-class IsoTanksAdmin(admin.ModelAdmin):\n-    list_display = ('reference', 'etat', 'dossier', 'agent_selection', 'agent_acconage','Date_ajout')\n-    list_filter = ('dossier', 'etat')\n-    search_fields = ('reference', 'dossier__projet')\n-\n-    def save_model(self, request, obj, form, change):\n-        if not change and not obj.agent_acconage:\n-            obj.agent_selection = request.Personnel_type\n-        elif change and 'agent_acconage' in form.changed_data:\n-            obj.agent_acconage = request.Personnel_type\n-        super().save_model(request, obj, form, change)\n  \n+ \n @admin.register(FichierJoint)\n class FicherJointAdmin(admin.ModelAdmin):\n     \n     pass\n"
                },
                {
                    "date": 1734434213191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n class ConteneurInline(admin.TabularInline):  # Vous pouvez aussi utiliser admin.StackedInline pour un affichage en blocs\n     model = Conteneur\n     extra = 1  # Nombre de conteneurs supplémentaires à afficher\n \n- \n # Configuration pour le modèle Dossier\n @admin.register(Dossier)\n class DossierAdmin(admin.ModelAdmin):\n     list_display = ('date_creation', 'statut', 'projet','TRD', 'client', 'agent_selection', 'agent_acconage','port_de_chargement', 'port_de_dechargement','compagnie_maritime', 'site', 'commodite', 'secretaire')\n"
                }
            ],
            "date": 1734390995987,
            "name": "Commit-0",
            "content": "from django.contrib import admin\nfrom .models import *\n\n# Inline pour les conteneurs\nclass ConteneurInline(admin.TabularInline):  # Vous pouvez aussi utiliser admin.StackedInline pour un affichage en blocs\n    model = Conteneur\n    extra = 1  # Nombre de conteneurs supplémentaires à afficher\n\n\nclass IsoInline(admin.TabularInline):  # Vous pouvez aussi utiliser admin.StackedInline pour un affichage en blocs\n    model = IsoTanks\n    extra = 1  # Nombre de conteneurs supplémentaires à afficher\n\n# Configuration pour le modèle Dossier\n@admin.register(Dossier)\nclass DossierAdmin(admin.ModelAdmin):\n    list_display = ('date_creation', 'statut', 'projet','TRD', 'client', 'agent_selection', 'agent_acconage','port_de_chargement', 'port_de_dechargement','compagnie_maritime', 'site', 'commodite', 'secretaire')\n    search_fields = ('projet', 'statut', 'Personnel_type', 'client__nom')\n    list_filter = ('statut', 'projet', 'date_creation', 'secretaire')\n    date_hierarchy = 'date_creation'\n    inlines = [ConteneurInline,IsoInline]  # Ajout de l'inline pour les conteneurs\n\n# Autres configurations d'administration (comme avant)\n@admin.register(Personnel)\nclass UserAdmin(admin.ModelAdmin):\n    list_display = ('username', 'first_name', 'last_name', 'email', 'Personnel_type')\n    search_fields = ('username', 'first_name', 'last_name', 'Personnel_type')\n    list_filter = ('Personnel_type',)\n\n@admin.register(Client)\nclass ClientAdmin(admin.ModelAdmin):\n    list_display = ('nom', 'adresse', 'contact', 'email')\n    search_fields = ('nom', 'adresse')\n\n@admin.register(Commodite)\nclass CommoditeAdmin(admin.ModelAdmin):\n    list_display = ('nom_commodite',)\n    search_fields = ('nom_commodite',)\n\n@admin.register(Site)\nclass SiteAdmin(admin.ModelAdmin):\n    list_display = ('nom_site',)\n    search_fields = ('nom_site',)\n\n@admin.register(Pays)\nclass  PaysAdmin(admin.ModelAdmin):\n    list_display = ('nom',)\n    search_fields = ('nom',)\n\n\n@admin.register(Site_empotage)\nclass Site_empotageAdmin(admin.ModelAdmin):\n    list_display = ('nom_site',)\n    search_fields = ('nom_site',)\n@admin.register(POD)\nclass PortDeDechargementAdmin(admin.ModelAdmin):\n    list_display = ('nom_POD',)\n    search_fields = ('nom_POD',)\n\n@admin.register(POL)\nclass PortDeChargementAdmin(admin.ModelAdmin):\n    list_display = ('nom_POL','Date_ajout')\n    search_fields = ('nom_POL',)\n\n@admin.register(CompagnieMaritime)\nclass CompagnieMaritimeAdmin(admin.ModelAdmin):\n    list_display = ('nom_compagnie_maritime',)\n    search_fields = ('nom_compagnie_maritime',)\n\n@admin.register(Conteneur)\nclass ConteneurAdmin(admin.ModelAdmin):\n    list_display = ('reference', 'etat', 'dossier', 'agent_selection', 'agent_acconage','Date_ajout')\n    list_filter = ('dossier', 'etat')\n    search_fields = ('reference', 'dossier__projet')\n\n    def save_model(self, request, obj, form, change):\n        if not change and not obj.agent_acconage:\n            obj.agent_selection = request.Personnel_type\n        elif change and 'agent_acconage' in form.changed_data:\n            obj.agent_acconage = request.Personnel_type\n        super().save_model(request, obj, form, change)\n\n\n@admin.register(IsoTanks)\nclass IsoTanksAdmin(admin.ModelAdmin):\n    list_display = ('reference', 'etat', 'dossier', 'agent_selection', 'agent_acconage','Date_ajout')\n    list_filter = ('dossier', 'etat')\n    search_fields = ('reference', 'dossier__projet')\n\n    def save_model(self, request, obj, form, change):\n        if not change and not obj.agent_acconage:\n            obj.agent_selection = request.Personnel_type\n        elif change and 'agent_acconage' in form.changed_data:\n            obj.agent_acconage = request.Personnel_type\n        super().save_model(request, obj, form, change)\n \n@admin.register(FichierJoint)\nclass FicherJointAdmin(admin.ModelAdmin):\n    \n    pass\n\n\n\n\nfrom django.contrib import admin\nfrom .models import Dossier2, Document_Facture, AutreDocument, Images\n\nclass DocumentFactureInline(admin.TabularInline):\n    model = Document_Facture\n    extra = 1\n    readonly_fields = ('Date_ajout',)\n\nclass AutreDocumentInline(admin.TabularInline):\n    model = AutreDocument\n    extra = 1\n    readonly_fields = ('Date_ajout',)\n\nclass ImagesInline(admin.TabularInline):\n    model = Images\n    extra = 1\n    readonly_fields = ('Date_ajout',)\n\n@admin.register(Dossier2)\nclass Dossier2Admin(admin.ModelAdmin):\n    list_display = ('projet', 'TRD', 'client', 'Date_ajout','date_creation')\n    search_fields = ('projet', 'TRD')\n    list_filter = ('client',)\n    inlines = [DocumentFactureInline, AutreDocumentInline, ImagesInline]\n"
        }
    ]
}