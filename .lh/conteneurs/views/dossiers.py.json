{
    "sourceFile": "conteneurs/views/dossiers.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1734944005367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734944814482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n from django.http import HttpRequest, HttpResponseRedirect\n from django.views.generic import ListView, CreateView,UpdateView,DeleteView,DetailView\n from conteneurs.models import *\n-from conteneurs.forms import DossiersCoteIvoireForm\n+from conteneurs.forms import DossiersForm\n from django.urls import reverse, reverse_lazy\n from django.shortcuts import render, get_object_or_404, redirect\n from django.utils.decorators import method_decorator\n from django.contrib.auth.decorators import login_required\n"
                },
                {
                    "date": 1734944980432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n \n @method_decorator(login_required, name='dispatch')\n class DossierCreateView(CreateView):\n     model = Dossier\n-    form_class = DossiersCoteIvoireForm\n+    form_class = DossiersForm\n     template_name = \"pages/Dossier/Dossier_create.html\"\n     success_url = reverse_lazy('Dossier_list')\n     form_invalid_message = \"Oups, quelque chose s'est mal passé!\"\n \n@@ -126,9 +126,9 @@\n     \n @method_decorator(login_required, name='dispatch')\n class DossierUpdateView(UpdateView):\n     model = Dossier\n-    form_class = DossiersCoteIvoireForm\n+    form_class = DossiersForm\n     template_name = \"pages/Dossier/Dossier_create.html\"\n     success_url = reverse_lazy('Dossier_list')\n \n     def get_object(self, **kwargs):\n@@ -173,58 +173,9 @@\n \n     def get_context_data(self, **kwargs):\n         context = super().get_context_data(**kwargs)\n         context['method'] = \"delete\"\n-        return context\n-\"\"\"\n-from django.views.generic import DetailView\n-\n-class DossierDetailView(DetailView):\n-    model = Dossier\n-    template_name =  \"pages/Dossier/Dossier_detail.html\"\n-\n-\n-from django.views.generic.edit import CreateView\n-from django.shortcuts import get_object_or_404\n-\n-\n-class AjouterConteneurView(CreateView):\n-    model = Conteneur\n-    fields = ['reference', 'etat', 'photo_devant', 'photo_derriere', 'photo_interieur', 'numero_pieds', 'poids_brute', 'poids_equipements', 'poids_net']\n-    template_name =  \"pages/Dossier/Dossier_ajouter_conteneur.html\"\n-\n-    def form_valid(self, form):\n-        # Associer le conteneur au dossier\n-        dossier = get_object_or_404(Dossier, pk=self.kwargs['dossier_id'])\n-        form.instance.dossier = dossier\n-        form.instance.agent_selection = self.request.user  # L'agent de sélection actuel\n-        return super().form_valid(form)\n-\n-    def get_success_url(self):\n-        # Rediriger vers la page des détails du dossier après l'ajout d'un conteneur\n-        return reverse('dossier_detail', kwargs={'pk': self.kwargs['dossier_id']})\n-\n-\n-from django.views.generic import View\n-from django.shortcuts import redirect\n-from django.contrib import messages\n-\n-class ValiderDossierView(View):\n-    def post(self, request, pk, *args, **kwargs):\n-        dossier = get_object_or_404(Dossier, pk=pk)\n-\n-        # Vérifier s'il y a au moins un conteneur ajouté avant la validation\n-        if dossier.conteneurs_selection.exists():\n-            dossier.statut = 'finalisation_en_cours'  # Changer le statut du dossier\n-            dossier.save()\n-            messages.success(request, 'Le dossier a été validé avec succès.')\n-        else:\n-            messages.error(request, 'Vous devez ajouter au moins un conteneur avant de valider.')\n-\n-        return redirect('dossier_detail', pk=pk)\n-\"\"\"\n-\n+        return context \n     \n-    \n def dossier_detail(request, pk):\n     dossier = get_object_or_404(Dossier, pk=pk)\n     return render(request, 'pages/Dossier/Dossier_detail_modal.html', {'dossier': dossier})\n\\ No newline at end of file\n"
                }
            ],
            "date": 1734944005367,
            "name": "Commit-0",
            "content": "from django.http import HttpRequest, HttpResponseRedirect\nfrom django.views.generic import ListView, CreateView,UpdateView,DeleteView,DetailView\nfrom conteneurs.models import *\nfrom conteneurs.forms import DossiersCoteIvoireForm\nfrom django.urls import reverse, reverse_lazy\nfrom django.shortcuts import render, get_object_or_404, redirect\nfrom django.utils.decorators import method_decorator\nfrom django.contrib.auth.decorators import login_required\nfrom django.contrib import messages\nfrom django.shortcuts import get_object_or_404,render\nfrom django.core.paginator import Paginator\nfrom braces.views import FormMessagesMixin\nfrom django.core.mail import send_mail\nfrom django.conf import settings\nfrom django.core.mail import EmailMultiAlternatives\nfrom django.utils import timezone\nfrom django.core.mail import EmailMessage\n\nfrom django.db.models import Q\n\nclass DossierView(ListView):\n    model = Dossier\n    context_object_name = 'Dossier_list'\n    template_name = 'pages/Dossier/Dossier_list.html'\n\n    def get_queryset(self):\n        queryset = Dossier.objects.all()\n        pays = Pays.objects.filter(nom='Côte d\\'Ivoire').first()  # Récupérer l'objet Pays pour 'Gabon'\n        if pays:\n            queryset = queryset.filter(pays=pays)\n\n        statut = self.request.GET.get('statut')\n        if statut:\n            queryset = queryset.filter(statut=statut)\n\n        search_query = self.request.GET.get('search', '')\n        if search_query:\n            queryset = queryset.filter(\n                Q(projet__icontains=search_query) | \n                Q(TRD__icontains=search_query) |\n                Q(booking__icontains=search_query)\n            )\n        return queryset.order_by('-Date_ajout')\n\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context['nombre_dossiers'] = self.get_queryset().count()  # Nombre de dossiers\n        return context\n\n\n\n@method_decorator(login_required, name='dispatch')\nclass DossierCreateView(CreateView):\n    model = Dossier\n    form_class = DossiersCoteIvoireForm\n    template_name = \"pages/Dossier/Dossier_create.html\"\n    success_url = reverse_lazy('Dossier_list')\n    form_invalid_message = \"Oups, quelque chose s'est mal passé!\"\n\n    def get_form_valid_message(self):\n        return f\"{self.object} créé avec succès!\"\n    \n    def form_valid(self, form):\n        # Assigner la secrétaire connectée (utilisateur actuel)\n        dossier = form.save(commit=False)\n        dossier.secretaire = self.request.user\n        pays_cote_ivoire = Pays.objects.get(nom=\"Côte d'Ivoire\")  # Remplacez par le pays souhaité\n        form.instance.pays = pays_cote_ivoire\n\n        dossier.save()\n\n        # Récupérer l'email de l'agent de sélection et des chefs\n        agent_selection_email = dossier.agent_selection.email\n        chefs_emails = [chef.email for chef in Personnel.objects.filter(Personnel_type='chef')]\n\n        # Préparation de l'email\n        subject = 'Nouveau dossier assigné'\n        message = f\"\"\"\n        <html>\n            <body>\n                <p>Un nouveau dossier <strong>{dossier.projet}</strong> pour {dossier.pays} vous a été assigné par : <strong>{self.request.user}</strong> à l'agent de sélection <strong>{dossier.agent_selection}</strong>.</p>\n                <p>Vous pouvez consulter le dossier en vous rendant sur l'application : <a href=\"https://empotage-oils-of-africa.net/login/\">Cliquez ici pour vous connecter</a>.</p>\n            </body>\n        </html>\n        \"\"\"\n\n        # Expéditeur : email de la secrétaire\n        from_email = self.request.user.email\n\n        # Liste des destinataires\n        recipient_list = [agent_selection_email] + chefs_emails\n\n        # Création de l'email\n        email = EmailMessage(subject, message, from_email, recipient_list)\n        email.content_subtype = 'html'  # Spécifier le format HTML de l'email\n\n        # Gestion des fichiers joints\n        fichiers = self.request.FILES.getlist('fichiers')  # Récupérer tous les fichiers sélectionnés\n        if fichiers:\n            for fichier in fichiers:\n                email.attach(fichier.name, fichier.read(), fichier.content_type)\n        else:\n            message += \"<p><em>Aucun fichier joint n'a été ajouté.</em></p>\"\n\n        # Envoi de l'email\n        email.send(fail_silently=False)\n\n        # Message de succès après sauvegarde\n        messages.success(self.request, \"ENREGISTREMENT DU DOSSIER AVEC SUCCÈS\")\n        return super().form_valid(form)\n\n    def form_invalid(self, form):\n        # Afficher les erreurs dans la console pour debug\n        print(form.errors)  \n        response = super().form_invalid(form)\n        messages.error(self.request, \"ERREUR !!! Le dossier existe déjà\")\n        return response\n \n\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context['method'] = \"post\"\n        context['action'] = \"create\"  # Ajouter une variable pour indiquer l'action\n        return context\n    \n    \n@method_decorator(login_required, name='dispatch')\nclass DossierUpdateView(UpdateView):\n    model = Dossier\n    form_class = DossiersCoteIvoireForm\n    template_name = \"pages/Dossier/Dossier_create.html\"\n    success_url = reverse_lazy('Dossier_list')\n\n    def get_object(self, **kwargs):\n        pk = self.kwargs.get('pk')\n        return get_object_or_404(Dossier, pk=pk)\n\n    def get_form_kwargs(self):\n        kwargs = super().get_form_kwargs()\n        kwargs['instance'] = self.get_object()  # Passer l'instance à modifier\n        return kwargs\n\n    def form_valid(self, form):\n        messages.success(self.request, \"Modification effectuée avec succès !\")\n        return super().form_valid(form)\n\n    def form_invalid(self, form):\n        messages.error(self.request, \"Erreur lors de la modification du dossier.\")\n        return super().form_invalid(form)\n        \n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context['method'] = \"post\"\n        context['action'] = \"update\"  # Ajouter une variable pour indiquer l'action\n        return context\n\n\n\n@method_decorator(login_required, name='dispatch')\nclass DossierDeleteView( DeleteView):\n    model = Dossier\n    template_name = \"pages/Dossier/Dossier_confirm_delete.html\"\n    success_url = reverse_lazy('Dossier_list')\n    form_invalid_message = \"Oups, quelque chose s'est mal passé lors de la suppression!\"\n\n    def delete(self, request, *args, **kwargs):\n        messages.success(self.request, \"Le Dossier a été supprimé avec succès!\")\n        return super().delete(request, *args, **kwargs)\n\n    def get_object(self, **kwargs):\n        pk = self.kwargs.get('pk')\n        return get_object_or_404(Dossier, pk=pk)\n\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context['method'] = \"delete\"\n        return context\n\"\"\"\nfrom django.views.generic import DetailView\n\nclass DossierDetailView(DetailView):\n    model = Dossier\n    template_name =  \"pages/Dossier/Dossier_detail.html\"\n\n\nfrom django.views.generic.edit import CreateView\nfrom django.shortcuts import get_object_or_404\n\n\nclass AjouterConteneurView(CreateView):\n    model = Conteneur\n    fields = ['reference', 'etat', 'photo_devant', 'photo_derriere', 'photo_interieur', 'numero_pieds', 'poids_brute', 'poids_equipements', 'poids_net']\n    template_name =  \"pages/Dossier/Dossier_ajouter_conteneur.html\"\n\n    def form_valid(self, form):\n        # Associer le conteneur au dossier\n        dossier = get_object_or_404(Dossier, pk=self.kwargs['dossier_id'])\n        form.instance.dossier = dossier\n        form.instance.agent_selection = self.request.user  # L'agent de sélection actuel\n        return super().form_valid(form)\n\n    def get_success_url(self):\n        # Rediriger vers la page des détails du dossier après l'ajout d'un conteneur\n        return reverse('dossier_detail', kwargs={'pk': self.kwargs['dossier_id']})\n\n\nfrom django.views.generic import View\nfrom django.shortcuts import redirect\nfrom django.contrib import messages\n\nclass ValiderDossierView(View):\n    def post(self, request, pk, *args, **kwargs):\n        dossier = get_object_or_404(Dossier, pk=pk)\n\n        # Vérifier s'il y a au moins un conteneur ajouté avant la validation\n        if dossier.conteneurs_selection.exists():\n            dossier.statut = 'finalisation_en_cours'  # Changer le statut du dossier\n            dossier.save()\n            messages.success(request, 'Le dossier a été validé avec succès.')\n        else:\n            messages.error(request, 'Vous devez ajouter au moins un conteneur avant de valider.')\n\n        return redirect('dossier_detail', pk=pk)\n\"\"\"\n\n    \n    \ndef dossier_detail(request, pk):\n    dossier = get_object_or_404(Dossier, pk=pk)\n    return render(request, 'pages/Dossier/Dossier_detail_modal.html', {'dossier': dossier})"
        }
    ]
}