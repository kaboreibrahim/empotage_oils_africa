# Generated by Django 5.1 on 2024-12-16 23:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_lifecycle.mixins
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('adresse', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=50)),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Commodite',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('nom_commodite', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CompagnieMaritime',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('nom_compagnie_maritime', models.CharField(max_length=50, unique=True)),
                ('lieu_compagnie_maritime', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FichierJoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fichier', models.FileField(upload_to='fichiers_joints/')),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('Contact', models.CharField(max_length=20)),
                ('photos', models.ImageField(blank=True, null=True, upload_to='Proprietaire_photos/', verbose_name='Photo')),
                ('is_verified', models.BooleanField(default=False)),
                ('Personnel_type', models.CharField(choices=[('agent_selection', 'Agent de Sélection '), ('agent_acconage', 'Agent Habillage & empotage'), ('secretaire', 'Secrétaire'), ('chef', 'Chef')], max_length=20)),
                ('Personnel_pays', models.CharField(choices=[('côte_ivoire', "Côte d'Ivoire"), ('Ghana', 'Ghana'), ('Nigeria', 'Nigeria'), ('Benin', 'Benin'), ('Gabon', 'Gabon')], default='côte_ivoire', max_length=20)),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('is_online', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='personnel_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='personnel_permissions_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dossier',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('en_attente', ' En Attente'), ('selection_en_cours', 'Selection en cours'), ('ACCONAGE_FAIT', 'empotage en cours'), ('Aconage_en_cours', "En Attente d'empotage"), ('dossier_termine', 'Termine')], default='en_attente', max_length=25)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('projet', models.CharField(max_length=50, unique=True)),
                ('TRD', models.CharField(max_length=50)),
                ('booking', models.CharField(max_length=50)),
                ('type_conteneur', models.CharField(choices=[('10_pieds', '10 Pieds'), ('20_pieds', '20 Pieds'), ('ISO_20_pieds', 'ISO 20 Pieds'), ('40_pieds', '40 Pieds')], max_length=13)),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('Date_selection', models.DateTimeField(blank=True, null=True, verbose_name='Date de sélection')),
                ('Date_acconage', models.DateTimeField(blank=True, null=True, verbose_name="Date d'acconage")),
                ('Date_terminer', models.DateTimeField(blank=True, null=True, verbose_name='Date de fin ')),
                ('agent_acconage', models.ForeignKey(blank=True, limit_choices_to={'Personnel_type': 'agent_acconage'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dossiers_acconage', to=settings.AUTH_USER_MODEL)),
                ('agent_selection', models.ForeignKey(limit_choices_to={'Personnel_type': 'agent_selection'}, on_delete=django.db.models.deletion.CASCADE, related_name='dossiers_selection', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.client')),
                ('commodite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.commodite')),
                ('compagnie_maritime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.compagniemaritime')),
                ('secretaire', models.ForeignKey(blank=True, limit_choices_to={'Personnel_type': 'secretaire'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('fichiers', models.ManyToManyField(blank=True, to='conteneurs.fichierjoint')),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Conteneur',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('etat', models.CharField(choices=[('excellent', 'Excellent'), ('moyen', 'Moyen'), ('mauvais', 'Mauvais')], max_length=10)),
                ('photo_devant', models.ImageField(upload_to='photos_devant/')),
                ('photo_derriere', models.ImageField(upload_to='photos_derriere/')),
                ('photo_interieur', models.ImageField(upload_to='photos_interieur/')),
                ('photo_lateral_droit', models.ImageField(upload_to='photo_lateral_droit/')),
                ('photo_lateral_gauche', models.ImageField(upload_to='photo_lateral_gauche/')),
                ('poids_brute', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('poids_equipements', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('poids_net', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('numero_heating_pad', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_heating_pad', models.ImageField(blank=True, null=True, upload_to='photos_heating_pad/')),
                ('numero_flexitank', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_flexitank', models.ImageField(blank=True, null=True, upload_to='photos_flexitank/')),
                ('numero_plomb', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_plomb', models.ImageField(blank=True, null=True, upload_to='photos_plomb/')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('statut', models.CharField(choices=[('Non_aconer', 'Non habillé & Non empote'), ('aconer', 'empote')], default='Non_aconer', max_length=20)),
                ('agent_acconage', models.ForeignKey(blank=True, limit_choices_to={'Personnel_type': 'agent_acconage'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conteneurs_acconage', to=settings.AUTH_USER_MODEL)),
                ('agent_selection', models.ForeignKey(limit_choices_to={'Personnel_type': 'agent_selection'}, on_delete=django.db.models.deletion.CASCADE, related_name='conteneurs_selection', to=settings.AUTH_USER_MODEL)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conteneurs', to='conteneurs.dossier')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Dossier2',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('projet', models.CharField(max_length=50, unique=True)),
                ('TRD', models.CharField(max_length=50)),
                ('booking', models.CharField(max_length=50)),
                ('type_conteneur', models.CharField(choices=[('10_pieds', '10 Pieds'), ('20_pieds', '20 Pieds'), ('ISO_20_pieds', 'ISO 20 Pieds'), ('40_pieds', '40 Pieds')], max_length=13)),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('agent_acconage', models.ForeignKey(blank=True, limit_choices_to={'Personnel_type': 'agent_acconage'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dossier2_acconages', to=settings.AUTH_USER_MODEL)),
                ('agent_selection', models.ForeignKey(limit_choices_to={'Personnel_type': 'agent_selection'}, on_delete=django.db.models.deletion.CASCADE, related_name='dossier2_selections', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.client')),
                ('commodite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.commodite')),
                ('compagnie_maritime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.compagniemaritime')),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'ordering': ['-date_creation'],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='IsoTanks',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('etat', models.CharField(choices=[('excellent', 'Excellent'), ('moyen', 'Moyen'), ('mauvais', 'Mauvais')], max_length=10)),
                ('photo_devant', models.ImageField(upload_to='photos_devant/')),
                ('photo_derriere', models.ImageField(upload_to='photos_derriere/')),
                ('photo_interieur', models.ImageField(upload_to='photos_interieur/')),
                ('photo_lateral_droit', models.ImageField(upload_to='photo_lateral_droit/')),
                ('photo_lateral_gauche', models.ImageField(upload_to='photo_lateral_gauche/')),
                ('poids_brute', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('poids_net', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('numero_plomb1', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_plomb1', models.ImageField(blank=True, null=True, upload_to='photos_plomb1/')),
                ('numero_plomb2', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_plomb2', models.ImageField(blank=True, null=True, upload_to='photos_plomb2/')),
                ('numero_plomb3', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_plomb3', models.ImageField(blank=True, null=True, upload_to='photos_plomb3/')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('statut', models.CharField(choices=[('Non_aconer', 'Non habillé & Non empote'), ('aconer', 'empote')], default='Non_aconer', max_length=20)),
                ('agent_acconage', models.ForeignKey(blank=True, limit_choices_to={'Personnel_type': 'agent_acconage'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='isotanks_acconage', to=settings.AUTH_USER_MODEL)),
                ('agent_selection', models.ForeignKey(limit_choices_to={'Personnel_type': 'agent_selection'}, on_delete=django.db.models.deletion.CASCADE, related_name='isotanks_selection', to=settings.AUTH_USER_MODEL)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Iso_tanks', to='conteneurs.dossier')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to=settings.AUTH_USER_MODEL)),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/%Y/%m/%d')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('Date_modification', models.DateTimeField(auto_now=True)),
                ('Date_suppression', models.DateTimeField(blank=True, null=True)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='conteneurs.dossier2')),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'ordering': ['-Date_ajout'],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Document_Facture',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='facture/%Y/%m/%d')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('Date_modification', models.DateTimeField(auto_now=True)),
                ('Date_suppression', models.DateTimeField(blank=True, null=True)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='factures', to='conteneurs.dossier2')),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'verbose_name': 'Document Facture',
                'verbose_name_plural': 'Documents Factures',
                'ordering': ['-Date_ajout'],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='compagniemaritime',
            name='pays',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays'),
        ),
        migrations.AddField(
            model_name='commodite',
            name='pays',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays'),
        ),
        migrations.AddField(
            model_name='client',
            name='pays',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays'),
        ),
        migrations.CreateModel(
            name='AutreDocument',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='documents/%Y/%m/%d')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('Date_modification', models.DateTimeField(auto_now=True)),
                ('Date_suppression', models.DateTimeField(blank=True, null=True)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autres_documents', to='conteneurs.dossier2')),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'verbose_name': 'Autre Document',
                'verbose_name_plural': 'Autres Documents',
                'ordering': ['-Date_ajout'],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nom', models.CharField(max_length=50)),
                ('Prenom', models.CharField(max_length=50)),
                ('Agent_type', models.CharField(choices=[('selection', 'Selection'), ('empotage', 'Empotage & Habillage ')], max_length=20)),
                ('contact', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=50)),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='POD',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('nom_POD', models.CharField(max_length=50, unique=True)),
                ('lieu_POD', models.CharField(max_length=150, unique=True)),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='dossier2',
            name='port_de_dechargement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pod'),
        ),
        migrations.AddField(
            model_name='dossier',
            name='port_de_dechargement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pod'),
        ),
        migrations.CreateModel(
            name='POL',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('nom_POL', models.CharField(max_length=50, unique=True)),
                ('lieu_POL', models.CharField(max_length=150, unique=True)),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='dossier2',
            name='port_de_chargement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pol'),
        ),
        migrations.AddField(
            model_name='dossier',
            name='port_de_chargement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pol'),
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('nom_site', models.CharField(max_length=50, unique=True)),
                ('contact_site', models.CharField(max_length=20)),
                ('lieu_site', models.CharField(max_length=150, unique=True)),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='dossier2',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.site'),
        ),
        migrations.AddField(
            model_name='dossier',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.site'),
        ),
        migrations.CreateModel(
            name='Site_empotage',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_ajout', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('nom_site', models.CharField(max_length=50, unique=True)),
                ('contact_site', models.CharField(max_length=20)),
                ('lieu_site', models.CharField(max_length=150, unique=True)),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.pays')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='dossier2',
            name='Site_empotage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.site_empotage'),
        ),
        migrations.AddField(
            model_name='dossier',
            name='Site_empotage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conteneurs.site_empotage'),
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
